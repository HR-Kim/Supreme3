<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.supreme.user">
	<!-- 
		do_update:수정
		do_delete:삭제
		do_save: 등록
		get_selectOne: 단건조회
		get_retrieve: 목록조회
	 -->
	 
	 
 	<sql id="userColumns">
		    id,
		    pass,
		    name,
		    lvl,
		    nickname,
		    email,
		    postcode,
		    address1,
		    address2,
		    tel,
		    image,
		    TO_CHAR(reg_dt, 'yyyy/mm/dd') reg_dt
	</sql>
	
	
	<sql id="baseCondition">
			<choose>
				<when test="'10' == searchDiv">
					and ID LIKE '%' || #{searchWord} || '%'
				</when>
				<when test="'20' == searchDiv">
					and NAME LIKE '%' || #{searchWord} || '%'
				</when>
				<when test="'30' == searchDiv">
					and TEL LIKE '%' || #{searchWord} || '%'
				</when>
				<otherwise></otherwise>							
			</choose>
	</sql>
	
	<!-- 아이디 체크 -->
	<select id="id_check" parameterType="User" >
		SELECT COUNT(*) CNT
		FROM USERS
		WHERE id = #{id,jdbcType=VARCHAR}	
	</select>
	
	<!-- 비번 체크 -->
	<select id="passwd_check" parameterType="User" >
		SELECT COUNT(*) CNT
		FROM USERS
		WHERE id = #{id,jdbcType=VARCHAR}	
		AND pass = #{pass,jdbcType=VARCHAR}
	</select> 
		    
	
	
	<!-- Id조회 -->
 	<select id="get_userIdList" parameterType="Search" resultType="User">
		SELECT										
		    <include refid="userColumns"/>                  
		FROM
   			 USERS                             
		WHERE id LIKE '%' || #{searchWord} || '%'
	</select> 
	
	
	<!-- 사용자 전체 조회 -->
	<select id="get_all"  resultType="User">
		 SELECT										
		     <include refid="userColumns" />			
		 FROM                                       
		     USERS                                  
		 ORDER BY reg_dt
	</select>
	
	
	<!-- 전체 조회 -->
	<select id="get_retrieve" parameterType="Search" resultType="User">
		SELECT T1.*,T2.*													
		FROM 
		(SELECT 
		    B.id as id,
			B.pass as pass,
			B.name as name,
			B.lvl as lvl,
			B.nickname as nickname,
			B.email as email,
			B.postcode as postcode,
			B.address1 as address1, 
			B.address2 as address2,
			B.tel as tel,
			B.image as image,
			TO_CHAR(B.reg_dt, 'yyyy/mm/dd') reg_dt
		    FROM
		        (SELECT ROWNUM as rnum, A.*
		        FROM
		            (SELECT *
		             FROM USERS
		             WHERE  1=1 
		             <include refid="baseCondition"/>
		             ORDER BY reg_dt DESC
		            )A
		            WHERE rownum <![CDATA[ <= ]]> (#{pageSize} * (#{pageNum}-1)+#{pageSize})
		        )B    
		        WHERE b.rnum <![CDATA[ >= ]]> (#{pageSize} * (#{pageNum}-1)+1)
		)T1  
		NATURAL JOIN                                                      
		(                                                                 
		  SELECT COUNT(*) totalCnt                                     
		  FROM USERS
		  WHERE  1=1 
		  <include refid="baseCondition"/>
		)T2
	</select>
	 
	<!-- 단건조회 -->
 	<select id="get_selectOne" parameterType="User" resultType="User">
		SELECT										
		    <include refid="userColumns"/>                  
		FROM
   			 USERS                             
		WHERE id = #{id,jdbcType=VARCHAR}
	</select> 
 	
 	<!-- 수정 -->
	<update id="do_update" parameterType="User">
		UPDATE users
		SET
		    pass = #{pass,jdbcType=VARCHAR},
		    name = #{name,jdbcType=VARCHAR},
		    lvl = #{lvl,jdbcType=VARCHAR},
		    nickname = #{nickname,jdbcType=VARCHAR},
		    email = #{email,jdbcType=VARCHAR},
		    postcode = #{postcode,jdbcType=VARCHAR},
		    address1 = #{address1,jdbcType=VARCHAR},
		    address2 = #{address2,jdbcType=VARCHAR},
		    tel = #{tel,jdbcType=VARCHAR},
		    image = #{image,jdbcType=VARCHAR},
		    reg_dt = SYSDATE
		WHERE
		    id = #{id,jdbcType=VARCHAR}
	</update>
 	
 	 
	<!-- 삭제 -->
	<delete id="do_delete" parameterType="User">
		DELETE FROM USERS WHERE id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<!-- 등록 -->
	<insert id="do_save" parameterType="User">
		INSERT INTO USERS (
		    id,
		    pass,
		    name,
		    lvl,
		    nickname,
		    email,
		    postcode,
		    address1,
		    address2,
		    tel,
		    image,
		    reg_dt
		) VALUES (
		    #{id,jdbcType=VARCHAR},
		    #{pass,jdbcType=VARCHAR},
		    #{name,jdbcType=VARCHAR},
		    #{lvl,jdbcType=VARCHAR},
		    #{nickname,jdbcType=VARCHAR},
		    #{email,jdbcType=VARCHAR},
		    #{postcode,jdbcType=VARCHAR},
		    #{address1,jdbcType=VARCHAR},
		    #{address2,jdbcType=VARCHAR},
		    #{tel,jdbcType=VARCHAR},
		    #{image,jdbcType=VARCHAR},
		    SYSDATE
		) 
	</insert>
</mapper>  
